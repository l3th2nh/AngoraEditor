var main_res={}
var main_scn={"walls":{"id":"walls","type":"group","visible":"true","x":0,"y":0,"physics":false},"snake":{"id":"snake","type":"group","visible":"true","x":0,"y":0,"physics":false}}
var main_config={"backgroundColor":"#000000","world":{"x":0,"y":0,"width":"640","height":"640","collideWorldBounds":false},"camera":{"x":0,"y":0,"width":"600","height":"600"},"physics":{"enable":"true","type":"ARCADE","gravityX":0,"gravityY":0},"input":{"onDown":"","onHold":"","onTap":"","onUp":""}}
var main=function(game){this.game=game;this.sceneName="main";this.sceneRes=main_res;this.sceneNode=main_scn;this.worldConfig=main_config;this.isLoadComplete=false;this.isCreateFinished=false;this.objects={};this.physicType="ARCADE";};main.prototype={preload:function(){this.customLoad();},create:function(){var worldConfig=this.worldConfig;this.stage.backgroundColor=worldConfig.backgroundColor;this.world.setBounds(parseInt(worldConfig.world.x),parseInt(worldConfig.world.y),parseInt(worldConfig.world.width),parseInt(worldConfig.world.height));if(parseBoolean(worldConfig.physics.enable)){this.physicType=worldConfig.physics.type;if(this.worldConfig.physics.type=="ARCADE"){this.game.physics.startSystem(Phaser.Physics.ARCADE);this.game.physics.arcade.gravity.x=parseInt(worldConfig.physics.gravityX);this.game.physics.arcade.gravity.y=parseInt(worldConfig.physics.gravityY);}else if(worldConfig.physics.type=="P2JS"){this.game.physics.startSystem(Phaser.Physics.P2JS);this.game.physics.p2.gravity.x=parseInt(worldConfig.physics.gravityX);this.game.physics.p2.gravity.y=parseInt(worldConfig.physics.gravityY);}}
for(ev in worldConfig.input){if(worldConfig.input[ev]!="")
this.game.input[ev].add(this[worldConfig.input[ev]],this);}
this.load.onLoadComplete.addOnce(this.loadComplete,this);for(i in this.sceneRes){LoadRes(this,this.sceneRes[i]);}
this.load.start();},loadComplete:function(){for(i in this.sceneNode){this.objects[this.sceneNode[i].id]=createObject(this,this.sceneNode[i]);if(typeof this.sceneNode[i].group!='undefined'){this.objects[this.sceneNode[i].group].add(this.objects[this.sceneNode[i].id]);}}
this.isLoadComplete=true;this.customCreate();this.isCreateFinished=true;},update:function(){if(this.isCreateFinished){this.customUpdate();}
else{this.customPreUpdate();}},customLoad:function(){},customCreate:function(){},customPreUpdate:function(){},customUpdate:function(){},shutdown:function(){for(obj in this.objects){game.world.remove(this.objects[obj]);}
this.objects={};for(res in this.sceneRes){removeRes(this,this.sceneRes[res]);}
this.sceneRes={};}};var arr=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]];var direct={x:32,y:0};var delay=0;var myobj=null;main.prototype.customLoad=function(){}
main.prototype.customCreate=function(){for(i=0;i<arr.length;i++){for(j=0;j<arr[i].length;j++){if(arr[i][j]==1){this.objects.walls.create(32*i,32*j,'grass');}else if(arr[i][j]==2){myobj=this.objects.walls.create(32*i,32*j,'obj');}}}
for(i=0;i<4;i++)
this.objects.snake.create(320,320,'body');}
main.prototype.customUpdate=function(){if(delay++%10===0){for(i=this.objects.snake.countLiving()-1;i>0;i--){this.objects.snake.getChildAt(i).x=this.objects.snake.getChildAt(i-1).x;this.objects.snake.getChildAt(i).y=this.objects.snake.getChildAt(i-1).y;}
this.objects.snake.getChildAt(0).x+=direct.x;this.objects.snake.getChildAt(0).y+=direct.y;}
if(game.input.keyboard.isDown(Phaser.Keyboard.UP)){if(direct.y!=32){direct.x=0;direct.y=-32;}}else if(game.input.keyboard.isDown(Phaser.Keyboard.DOWN)){if(direct.y!=-32){direct.x=0;direct.y=32;}}else if(game.input.keyboard.isDown(Phaser.Keyboard.LEFT)){if(direct.x!=32){direct.y=0;direct.x=-32;}}else if(game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)){if(direct.x!=-32){direct.y=0;direct.x=32;}}
var obj=this.objects.snake.getChildAt(0);var x=obj.x/32;var y=obj.y/32;if(arr[x][y]===1){this.objects.snake.removeAll();for(i=0;i<4;i++)
this.objects.snake.create(320,320,'body');direct={x:32,y:0};}else if(arr[x][y]===2){this.objects.snake.create(obj.x,obj.y,'body');arr[x][y]=0;nx=Math.floor(Math.random()*15)+1;ny=Math.floor(Math.random()*15)+1;arr[nx][ny]=2;myobj.reset(nx*32,ny*32);}}